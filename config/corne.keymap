/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ 
 

{

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys


behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

 behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    }; 

 ZMK_BEHAVIOR(hml, hold_tap,  // left-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)

ZMK_BEHAVIOR(hmr, hold_tap,  // right-hand HRMs
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap-ms = <150>;        // requires PR #1387
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;            // requires PR #1423
)

// replicate left-hand HRM for repeat combo
ZMK_BEHAVIOR(hml_repeat, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <QUICK_TAP_MS>;
    global-quick-tap-ms = <150>;
    bindings = <&kp>, <&key_repeat>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
)
 

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT  |
//                    | ALT | RSE | ENT |   | SPC | LWR  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &hm LGUI A &hm LALT S &hm LSHFT D &hm LCTRL F &kp G   &kp H &hm RCTRL J  &hm RSHFT K &hm RALT L &hm RGUI SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                  &mt LALT LGUI &mo 2 &kp RET   &kp SPACE &mo 1 &mt LALT LGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | CAPS |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCL | BT1 | BT2 | BT3 | BT4 | BT5 |   | F11 | F12 |     | vup | vdw | mute |
// | SHFT |  F1 |  F2 |  F3 | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 | SHFT |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp CAPS    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp F11   &kp F12      &trans      &kp C_VOL_UP    &kp C_VOL_DN &kp C_MUTE
   &kp LSHFT  &kp F1    &kp F2  &kp F3  &kp F4  &kp F5  &kp F6   &kp F7 &kp F8  &kp F9  &kp F10 &trans
                                   &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                raise_layer {
 // -----------------------------------------------------------------------------------------
// | ESC  | CUT | CPY | PST | CTA | PRN |   |  7  |  8  |  9  | REC | INS | DEL |
// | CTRL | HME | END |  =  |  -  |  _  |   |  4  |  5  |  6  |     |  UP | "\"  |
// | SHFT | CTZ |  (  |  )  |  [  |  ]  |   |  1  |  2  |  3  | LFT | DWN | RGT  |
//                    | ALT  |    | ENT |   | SPC |  0  | ALT |
                        bindings = <
   &kp ESC      &kp LC(X)       &kp LC(C)       &kp LC(V)       &kp LC(A)       &kp PSCRN       &kp KP_N7 &kp KP_N8  &kp KP_N9 &kp LA(LG(R)) &kp INS &kp DEL
   &kp LCTRL &kp HOME   &kp END &kp EQUAL       &kp MINUS   &kp UNDER   &kp KP_N4 &kp KP_N5 &kp KP_N6        &trans &kp UP &kp BSLH
   &kp LSHFT &kp LC(Z)   &kp LPAR       &kp RPAR   &kp LBKT     &kp RBKT      &kp KP_N1 &kp KP_N2  &kp KP_N3        &kp LEFT &kp DOWN &kp RIGHT
                          &trans &trans   &trans   &trans       &kp KP_N0  &trans
                        >;
                };
        };
};