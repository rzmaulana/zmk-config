/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /*          42 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────┬────────────────────────╮ 
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ 
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ 
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ 
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ 
              ╰────────────┴────────────╯             */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE 1

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29  // left-hand keys
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 // right-hand keys
#define THUMBS 36 37 38 39 40 41   

#define TAPPING_TERM 200
#define QUICK_TAP    100

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    timeout-ms = <25>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

&caps_word {
    continue-list = <UNDERSCORE MINUS SPACE SINGLE_QUOTE DOUBLE_QUOTES EXCLAMATION QUESTION BACKSPACE>;
}; 

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

/ 
 

{

 behaviors {
       hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

         hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    }; 

 /*          42 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────────┬────────────────────────╮ 
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ 
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ 
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ 
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ 
              ╰────────────┴────────────╯             */
    combos {
                compatible = "zmk,combos";

                COMBO(escape, &kp ESC, 1 2, DEFAULT) 
                COMBO(tab, &kp TAB, 2 3, DEFAULT) 
                COMBO(page_up, &kp PAGE_UP, 3 4, DEFAULT) 
                COMBO(page_down, &kp PAGE_DOWN, 4 5, DEFAULT) 

                COMBO(exclamation,&kp EXCL, 1 13, DEFAULT) 
                COMBO(alias,&kp AT, 2 14, DEFAULT)
                COMBO(hash,&kp HASH, 3 15, DEFAULT) 
                COMBO(dollar,&kp DOLLAR, 4 16, DEFAULT) 
                COMBO(percent,&kp PERCENT, 5 17, DEFAULT) 
                COMBO(caret,&kp CARET, 6 18, DEFAULT) 
                COMBO(ampersand,&kp AMPS, 7 19, DEFAULT) 
                COMBO(asterisk,&kp ASTRK, 8 20, DEFAULT) 
                COMBO(leftpar,&kp LPAR, 9 21, DEFAULT) 
                COMBO(rightpar,&kp RPAR, 10 22, DEFAULT)
                
                COMBO(f1,&kp F1, 13 25, DEFAULT) 
                COMBO(f2,&kp F2, 14 26, DEFAULT)
                COMBO(f3,&kp F3, 15 27, DEFAULT) 
                COMBO(f4,&kp F4, 16 28, DEFAULT) 
                COMBO(f5,&kp F5, 17 29, DEFAULT) 
                COMBO(f6,&kp F6, 18 30, DEFAULT) 
                COMBO(f7,&kp F7, 19 31, DEFAULT) 
                COMBO(f8,&kp F8, 20 32, DEFAULT) 
                COMBO(f9,&kp F9, 21 33, DEFAULT) 
                COMBO(f10,&kp F10, 22 34, DEFAULT) 
                 
                COMBO(btclr,&bt BT_CLR, 1 10, DEFAULT)
                COMBO(btsel1,&bt BT_SEL 0, 13 22, DEFAULT) 
                COMBO(btsel2,&bt BT_SEL 1, 25 34, DEFAULT) 

                /* Lock Layer */
                COMBO(lock,&tog LOWER, 5 6, DEFAULT) 
                COMBO(unlock,&tog DEFAULT, 17 18, DEFAULT)
                            
        };



        keymap {
                compatible = "zmk,keymap";

                default_layer {  
                        bindings = <
//╭───────┬──────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭──────────┬──────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &none     &kp Q       &kp W         &kp E         &kp R       &kp T             &kp Y       &kp U        &kp I         &kp O        &kp P        &none
//├───────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├──────────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none &hml LGUI A   &hml LALT S  &hml LSHFT D  &hml LCTRL F   &kp G             &kp H    &hmr RCTRL J &hmr RSHFT K  &hmr RALT L  &hmr RGUI APOS  &none
//├───────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├──────────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none     &kp Z       &kp X         &kp C         &kp V       &kp B             &kp N       &kp M      &kp COMMA      &kp DOT      &kp FSLH      &none
//╰───────┴──────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰──────────┴──────────┴─────────────┼─────────────┼─────────────┼──────────╯
                                     &mt LALT LGUI   &mo RAISE    &kp BSPC         &kp SPACE   &kp ENTER  &kp KP_NUM  
 //                                ╰─────────────┴─────────────┴──────────╯       ╰──────────┴──────────┴─────────────╯
                };

                raise_layer {
                    bindings = <
//╭───────┬──────────┬─────────────┬─────────────┬─────────────┬──────────╮       ╭──────────┬──────────┬─────────────┬─────────────┬─────────────┬──────────╮
    &none   &kp LC(X)   &kp LC(C)     &kp LC(V)     &kp LC(A)    &kp PSCRN          &kp KP_N7  &kp KP_N8   &kp KP_N9     &kp INS      &kp DEL        &none
//├───────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├──────────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none   &kp HOME    &kp END       &kp EQUAL    &kp MINUS     &kp UNDER          &kp KP_N4  &kp KP_N5   &kp KP_N6     &kp SEMI     &kp BSLH       &none
//├───────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤       ├──────────┼──────────┼─────────────┼─────────────┼─────────────┼──────────┤
    &none   &kp LC(Z)   &kp LPAR      &kp RPAR      &kp LBKT     &kp RBKT           &kp KP_N1  &kp KP_N2   &kp KP_N3   &kp LA(LG(R))  &kp C_MUTE     &none
//╰───────┴──────────┴─────────────┼─────────────┼─────────────┼──────────╯       ╰──────────┴──────────┴─────────────┼─────────────┼─────────────┼──────────╯
                                       &trans       &trans        &trans             &trans   &kp KP_N0    &caps_word
 //                                ╰─────────────┴─────────────┴──────────╯       ╰──────────┴──────────┴─────────────╯
               >;
                };


                
        };
};
;